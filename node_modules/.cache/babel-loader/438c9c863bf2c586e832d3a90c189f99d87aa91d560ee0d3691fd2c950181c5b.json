{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dominic\\\\Downloads\\\\dominic\\\\lasernasp2\\\\src\\\\components\\\\AnnouncementLists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AnnouncementLists.css';\nimport AnnouncementsForm from './AnnouncementsForm'; // Import the AnnouncementsForm component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnnouncementsList = () => {\n  _s();\n  const [announcements, setAnnouncements] = useState([]);\n  const [userType, setUserType] = useState('');\n  const [managerEmail, setManagerEmail] = useState('');\n  const loggedInUserEmail = localStorage.getItem('loggedInUserEmail');\n  useEffect(() => {\n    fetchUserType();\n  }, []);\n  const fetchAnnouncements = async (userEmail, managerEmail) => {\n    try {\n      const response = await fetch(`/announcements/tenant/${encodeURIComponent(userEmail)}/${encodeURIComponent(managerEmail)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setAnnouncements(data);\n      } else {\n        console.error('Failed to fetch announcements');\n      }\n    } catch (error) {\n      console.error('Server error:', error);\n    }\n  };\n  const fetchUserType = async () => {\n    try {\n      const response = await fetch(`/user-details/${encodeURIComponent(loggedInUserEmail)}`);\n      if (response.ok) {\n        const userData = await response.json();\n        setUserType(userData.userType);\n        setManagerEmail(userData.managerEmail || ''); // Assuming managerEmail is available in user data\n        fetchAnnouncements(loggedInUserEmail, userData.managerEmail || '');\n      } else {\n        console.error('Failed to fetch user type');\n      }\n    } catch (error) {\n      console.error('Error fetching user type:', error);\n    }\n  };\n\n  // Define a function to handle announcement submission\n  const handleAnnouncementSubmit = async announcementData => {\n    try {\n      const response = await fetch('/announcements', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(announcementData)\n      });\n      if (response.ok) {\n        console.log('Announcement created successfully');\n        fetchAnnouncements(loggedInUserEmail, managerEmail); // Refresh announcements after submission\n      } else {\n        console.error('Failed to create announcement');\n      }\n    } catch (error) {\n      console.error('Error creating announcement:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"announcements-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Announcements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), userType === 'manager' && /*#__PURE__*/_jsxDEV(AnnouncementsForm, {\n      onAnnouncementSubmit: handleAnnouncementSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 40\n    }, this), announcements.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No announcements available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: announcements.map((announcement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `announcement ${announcement.manager === loggedInUserEmail ? 'announcement-right' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"announcement-title\",\n          children: announcement.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"announcement-message\",\n          children: announcement.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"announcement-details\",\n          children: [\"Posted by: \", announcement.manager]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(AnnouncementsList, \"dsjBIh8ty6+umEzyrglPgNKpWhE=\");\n_c = AnnouncementsList;\nexport default AnnouncementsList;\nvar _c;\n$RefreshReg$(_c, \"AnnouncementsList\");","map":{"version":3,"names":["React","useState","useEffect","AnnouncementsForm","jsxDEV","_jsxDEV","AnnouncementsList","_s","announcements","setAnnouncements","userType","setUserType","managerEmail","setManagerEmail","loggedInUserEmail","localStorage","getItem","fetchUserType","fetchAnnouncements","userEmail","response","fetch","encodeURIComponent","ok","data","json","console","error","userData","handleAnnouncementSubmit","announcementData","method","headers","body","JSON","stringify","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAnnouncementSubmit","length","map","announcement","index","manager","title","message","_c","$RefreshReg$"],"sources":["C:/Users/Dominic/Downloads/dominic/lasernasp2/src/components/AnnouncementLists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './AnnouncementLists.css';\r\nimport AnnouncementsForm from './AnnouncementsForm'; // Import the AnnouncementsForm component\r\n\r\nconst AnnouncementsList = () => {\r\n    const [announcements, setAnnouncements] = useState([]);\r\n    const [userType, setUserType] = useState('');\r\n    const [managerEmail, setManagerEmail] = useState('');\r\n    const loggedInUserEmail = localStorage.getItem('loggedInUserEmail');\r\n\r\n    useEffect(() => {\r\n        fetchUserType();\r\n    }, []);\r\n\r\n    const fetchAnnouncements = async (userEmail, managerEmail) => {\r\n        try {\r\n            const response = await fetch(`/announcements/tenant/${encodeURIComponent(userEmail)}/${encodeURIComponent(managerEmail)}`);\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setAnnouncements(data);\r\n            } else {\r\n                console.error('Failed to fetch announcements');\r\n            }\r\n        } catch (error) {\r\n            console.error('Server error:', error);\r\n        }\r\n    };\r\n\r\n    const fetchUserType = async () => {\r\n        try {\r\n            const response = await fetch(`/user-details/${encodeURIComponent(loggedInUserEmail)}`);\r\n            if (response.ok) {\r\n                const userData = await response.json();\r\n                setUserType(userData.userType);\r\n                setManagerEmail(userData.managerEmail || ''); // Assuming managerEmail is available in user data\r\n                fetchAnnouncements(loggedInUserEmail, userData.managerEmail || '');\r\n            } else {\r\n                console.error('Failed to fetch user type');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching user type:', error);\r\n        }\r\n    };\r\n\r\n    // Define a function to handle announcement submission\r\n    const handleAnnouncementSubmit = async (announcementData) => {\r\n        try {\r\n            const response = await fetch('/announcements', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(announcementData)\r\n            });\r\n            if (response.ok) {\r\n                console.log('Announcement created successfully');\r\n                fetchAnnouncements(loggedInUserEmail, managerEmail); // Refresh announcements after submission\r\n            } else {\r\n                console.error('Failed to create announcement');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error creating announcement:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"announcements-list-container\">\r\n            <h2>Announcements</h2>\r\n            {userType === 'manager' && <AnnouncementsForm onAnnouncementSubmit={handleAnnouncementSubmit} />}\r\n            {announcements.length === 0 ? (\r\n                <p>No announcements available</p>\r\n            ) : (\r\n                <div>\r\n                    {announcements.map((announcement, index) => (\r\n                        <div key={index} className={`announcement ${announcement.manager === loggedInUserEmail ? 'announcement-right' : ''}`}>\r\n                            <h3 className=\"announcement-title\">{announcement.title}</h3>\r\n                            <p className=\"announcement-message\">{announcement.message}</p>\r\n                            <p className=\"announcement-details\">Posted by: {announcement.manager}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnnouncementsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}